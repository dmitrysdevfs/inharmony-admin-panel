export const login = async (email, password) => {
  try {
    console.log('üîê login: –Ω–∞–¥—Å–∏–ª–∞—î–º–æ –∑–∞–ø–∏—Ç...');
    const response = await fetch('/api/auth/login', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      credentials: 'include', // üîπ —â–æ–± –±–µ–∫–µ–Ω–¥ –º—ñ–≥ –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ cookie
      body: JSON.stringify({ email, password }),
    });

    if (!response.ok) {
      throw new Error(`API request failed: ${response.status} ${response.statusText}`);
    }

    const responseData = await response.json();
    console.log('‚úÖ login: responseData:', responseData);

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
    let userData = null;

    if (responseData.data) {
      console.log('‚úÖ login: –∑–Ω–∞–π–¥–µ–Ω–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ responseData.data');
      userData = responseData.data;
    } else if (responseData.user) {
      console.log('‚úÖ login: –∑–Ω–∞–π–¥–µ–Ω–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ responseData.user');
      userData = responseData.user;
    } else {
      console.warn('‚ö†Ô∏è login: –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤—ñ–¥—Å—É—Ç–Ω—ñ, —Å—Ç–≤–æ—Ä—é—î–º–æ –±–∞–∑–æ–≤—ñ –¥–∞–Ω—ñ');

      // –°—Ç–≤–æ—Ä—é—î–º–æ –±–∞–∑–æ–≤—ñ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–∞ –æ—Å–Ω–æ–≤—ñ email
      userData = {
        name: email.split('@')[0], // –ë–µ—Ä–µ–º–æ —á–∞—Å—Ç–∏–Ω—É –¥–æ @ —è–∫ —ñ–º'—è
        role: 'admin', // –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º admin
        email: email,
        id: Date.now(), // –£–Ω—ñ–∫–∞–ª—å–Ω–∏–π ID
      };

      console.log('‚úÖ login: —Å—Ç–≤–æ—Ä–µ–Ω—ñ –±–∞–∑–æ–≤—ñ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', userData);
    }

    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ localStorage
    if (userData) {
      localStorage.setItem('inharmony_user', JSON.stringify(userData));
      console.log('üíæ login: –∑–±–µ—Ä–µ–≥–ª–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ localStorage');
    }

    return { success: true, data: userData };
  } catch (error) {
    console.error('‚ùå login: –ø–æ–º–∏–ª–∫–∞:', error);
    return { success: false, reason: `API –ø–æ–º–∏–ª–∫–∞: ${error.message}` };
  }
};

export const logout = async () => {
  try {
    console.log('üîê logout: –Ω–∞–¥—Å–∏–ª–∞—î–º–æ –∑–∞–ø–∏—Ç...');
    const response = await fetch('/api/auth/logout', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      credentials: 'include',
    });

    if (response.status === 204 || response.status === 403 || response.ok) {
      console.log('‚úÖ logout: —É—Å–ø—ñ—à–Ω–æ –∞–±–æ –≤–∂–µ —Ä–æ–∑–ª–æ–≥—ñ–Ω–µ–Ω–∏–π');
      return { success: true };
    }

    throw new Error(`API returned unexpected status: ${response.status}`);
  } catch (error) {
    console.error('‚ùå logout: –ø–æ–º–∏–ª–∫–∞:', error);
    return { success: false, reason: `API –ø–æ–º–∏–ª–∫–∞: ${error.message}` };
  }
};
export const getCurrentUser = async () => {
  try {
    const storedUser = localStorage.getItem('inharmony_user');
    if (storedUser) {
      return { success: true, data: JSON.parse(storedUser) };
    }
    return { success: false, data: null, reason: '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π —É localStorage' };
  } catch (error) {
    return { success: false, data: null, reason: `–ü–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è localStorage: ${error.message}` };
  }
};
