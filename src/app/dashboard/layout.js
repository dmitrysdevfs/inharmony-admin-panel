'use client';

import { useState, useEffect } from 'react';
import { useRouter, usePathname } from 'next/navigation';
import { getCurrentUser, logout } from '@/services/authService';
import Button from '@/components/ui/Button';
import styles from './DashboardLayout.module.css';

export default function DashboardLayout({ children }) {
  const [user, setUser] = useState(null);
  const [loading, setLoading] = useState(true);
  const router = useRouter();
  const pathname = usePathname();

  useEffect(() => {
    const fetchUser = async () => {
      try {
        setLoading(true);
        const res = await getCurrentUser();
        if (res.success) {
          setUser(res.data);
        } else {
          console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', res.reason);
          // –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ–º–∞—î ‚Äî –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–∞ –ª–æ–≥—ñ–Ω
          router.push('/auth/login');
        }
      } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', error);
        router.push('/auth/login');
      } finally {
        setLoading(false);
      }
    };

    fetchUser();
  }, [router]);

  const handleLogout = async () => {
    const res = await logout();
    if (res.success) {
      // localStorage –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –æ—á–∏—â–∞—î—Ç—å—Å—è –≤ logout —Ñ—É–Ω–∫—Ü—ñ—ó
      router.push('/auth/login');
    } else {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏—Ö–æ–¥—ñ:', res.reason);
    }
  };

  const navigation = [
    { name: '–ó–±–æ—Ä–∏', href: '/dashboard/collections', icon: 'üìä' },
    { name: '–ó–≤—ñ—Ç–∏', href: '/dashboard/reports', icon: 'üìà' },
    { name: '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ', href: '/dashboard/users', icon: 'üë•' },
    { name: '–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è', href: '/dashboard/settings', icon: '‚öôÔ∏è' },
  ];

  // –ü–æ–∫–∞–∑—É—î–º–æ loading –ø–æ–∫–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î—Ç—å—Å—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
  if (loading) {
    return (
      <div className={styles.dashboardContainer}>
        <div
          style={{
            display: 'flex',
            justifyContent: 'center',
            alignItems: 'center',
            width: '100%',
            height: '100vh',
          }}
        >
          <div>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</div>
        </div>
      </div>
    );
  }

  // –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ–º–∞—î –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è, –ø–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
  if (!user) {
    return (
      <div className={styles.dashboardContainer}>
        <div
          style={{
            display: 'flex',
            justifyContent: 'center',
            alignItems: 'center',
            width: '100%',
            height: '100vh',
          }}
        >
          <div>–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É –≤—Ö–æ–¥—É...</div>
        </div>
      </div>
    );
  }

  return (
    <div className={styles.dashboardContainer}>
      {/* Sidebar */}
      <aside className={styles.sidebar}>
        <div className={styles.logo}>
          <h2>InHarmony</h2>
        </div>
        <nav className={styles.nav}>
          {navigation.map(item => {
            const isActive = pathname.startsWith(item.href);
            return (
              <a
                key={item.name}
                href={item.href}
                className={`${styles.navItem} ${isActive ? styles.active : ''}`}
              >
                <span className={styles.icon}>{item.icon}</span>
                <span className={styles.name}>{item.name}</span>
              </a>
            );
          })}
        </nav>
      </aside>

      {/* Main content */}
      <div className={styles.mainContent}>
        <header className={styles.header}>
          <h1>–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è</h1>
          <div className={styles.userSection}>
            <div className={styles.userInfo}>
              <span className={styles.userName}>{user.name || '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á'}</span>
              <span className={styles.userRole}>{user.role || '–†–æ–ª—å'}</span>
            </div>
            <Button variant="outline" size="small" onClick={handleLogout}>
              –í–∏–π—Ç–∏
            </Button>
          </div>
        </header>
        <main className={styles.main}>{children}</main>
      </div>
    </div>
  );
}
